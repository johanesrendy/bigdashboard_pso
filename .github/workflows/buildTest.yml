name: Dev Branch CI Workflow

on:
  push:
    branches:
      - dev

permissions:
  contents: write
  pull-requests: write

jobs:
  build-and-push:
    name: 🚀 Build & Push Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: 🛎 Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 🔧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: 🔑 Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 📦 Build and Push App Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Docker/dockerfile/app.Dockerfile
          push: true
          tags: johanesrendy/laravel:${{ github.run_number }}

      - name: 📦 Build and Push Nginx Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Docker/dockerfile/nginx.Dockerfile
          push: true
          tags: johanesrendy/laravel-nginx:${{ github.run_number }}

      - name: 📦 Build and Push NPM Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Docker/dockerfile/npm.Dockerfile
          push: true
          tags: johanesrendy/laravel-npm:${{ github.run_number }}

      - name: 📤 Save Run Number as Artifact
        run: echo "${{ github.run_number }}" > run_number.txt

      - name: 📦 Upload Run Number Artifact
        uses: actions/upload-artifact@v3
        with:
          name: run-number
          path: run_number.txt

  quality-gate-check:
    name: ✅ SonarCloud Quality Gate Check
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: 🔍 Check SonarCloud Quality Gate
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          STATUS=$(curl -s -u "${SONAR_TOKEN}:" \
            "https://sonarcloud.io/api/qualitygates/project_status?projectKey=johanesrendy_bigdashboard_pso" \
            | jq -r '.projectStatus.status')
          if [[ "$STATUS" != "OK" ]]; then
            echo "❌ Quality Gate Failed!"
            exit 1
          else
            echo "✅ Quality Gate Passed!"
          fi

  create-pr:
    name: 🔀 Create Pull Request to Production
    needs: quality-gate-check
    runs-on: ubuntu-latest
    steps:
      - name: 🛎 Checkout Code
        uses: actions/checkout@v3

      - name: Ensure Base Branch Checkout
        run: |
          git fetch origin production
          git checkout production

      - name: 📋 Create Pull Request to Production
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: dev
          branch: production
          title: "Deploy Dev to Production - Build #${{ github.run_number }}"
          body: |
            ### 🚀 Deployment PR
            Merging updates from dev to production.
            - *Build Number*: #${{ github.run_number }}
            - *Pipeline Status*: ✅ Quality Gate Passed
            - *Docker Images Pushed*:
              - App: johanesrendy/laravel:${{ github.run_number }}
              - Nginx: johanesrendy/laravel-nginx:${{ github.run_number }}
              - NPM: johanesrendy/laravel-npm:${{ github.run_number }}

      - name: 🔍 Debug Pull Request
        run: |
          echo "✅ Pull Request successfully created to Production!"
