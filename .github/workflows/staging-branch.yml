name: SonarCloud Analysis and Merge

on:
  push:
    branches:
      - staging
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - staging

permissions:
  pull-requests: write
  contents: write  # Diperlukan untuk merge otomatis

jobs:
  sonarcloud-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Pastikan semua riwayat tersedia

      - name: Install SonarScanner CLI
        run: |
          wget -q -O sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
          unzip sonar-scanner.zip
          mv sonar-scanner-4.8.0.2856-linux /opt/sonar-scanner
          echo "export PATH=/opt/sonar-scanner/bin:$PATH" >> $GITHUB_ENV

      - name: Run SonarCloud Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
          -Dsonar.projectKey=johanesrendy_bigdashboard_pso \
          -Dsonar.organization=big-dashboard-pso \
          -Dsonar.sources=. \
          -Dsonar.host.url=https://sonarcloud.io

      - name: Check SonarCloud Quality Gate
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          STATUS=$(curl -s -u "${SONAR_TOKEN}:" "https://sonarcloud.io/api/qualitygates/project_status?projectKey=johanesrendy_bigdashboard_pso" | jq -r '.projectStatus.status')
          if [[ "$STATUS" != "OK" ]]; then
            echo "❌ Quality Gate Failed!"
            exit 1
          else
            echo "✅ Quality Gate Passed!"
          fi

  auto-merge:
    needs: sonarcloud-analysis
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Enable Auto-Merge
        uses: peter-evans/enable-pull-request-automerge@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ github.event.pull_request.number }}
          merge-method: squash

  merge-to-production:
    needs: sonarcloud-analysis
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Merge Staging to Production
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git checkout production
          git merge --no-ff staging -m "Auto-merge staging to production after successful Quality Gate"
          git push origin production
