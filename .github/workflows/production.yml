name: Deploy to Production

on:
  workflow_run:
    workflows: ["Dev Branch CI Workflow"]
    types:
      - completed

permissions:
  contents: read
  actions: read

jobs:
  deploy:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'
    steps:
      - name: 📥 Download Run Number Artifact
        uses: actions/download-artifact@v3
        with:
          name: run-number
          path: run_number.txt

      - name: 🔍 Read Run Number
        id: run_number
        run: echo "RUN_NUMBER=$(cat run_number.txt)" >> $GITHUB_ENV
      - name: 🛎 Checkout Production Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 🚀 Pull Latest Docker Images
        run: |
          echo "=== Pulling Latest Docker Images ==="
          TAG=${{ env.RUN_NUMBER }}
          echo "Using Image Tag: $TAG"

          # Validate Docker Images
          if ! sudo docker manifest inspect johanesrendy/laravel:$TAG > /dev/null; then
            echo "Error: Docker image johanesrendy/laravel:$TAG not found!"
            exit 1
          fi

          sudo docker pull johanesrendy/laravel:$TAG
          sudo docker pull johanesrendy/laravel-nginx:$TAG
          sudo docker pull johanesrendy/laravel-npm:$TAG

      - name: 🚀 Deploy to Production Server
        uses: appleboy/ssh-action@master
        with:
          host: "3.106.237.6"
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            set -e

            echo "=== Pulling Latest Changes ==="
            cd ~/bigdashboard_pso
            git checkout production
            git pull origin production
            composer install --no-interaction --prefer-dist --optimize-autoloader

            echo "=== Deleting hot ==="
            cd public
            sudo rm -rf hot
            cd ..
            echo "=== Deleting hot success ==="

            echo "=== Updating IMAGE_VER in .env ==="
            sed -i '$d' .env && echo "IMAGE_VER=${{ github.run_number }}" >> .env

            echo "=== Restarting Nginx ==="
            sudo nginx -t && sudo service nginx restart

            echo "=== Rebuilding Docker Containers ==="
            sudo docker-compose --env-file .env down
            sudo docker-compose --env-file .env up -d --build

            echo "✅ Deployment Completed Successfully!"
